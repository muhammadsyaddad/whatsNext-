// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- BAGIAN AUTENTIKASI (Sudah Ada) ---

model User {
  id                   String    @id @default(cuid())
  name                 String?
  email                String?   @unique
  emailVerified        DateTime? @map("emailVerified")
  image                String?
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  role                 UserRole  @default(USER)
  accounts             Account[]
  sessions             Session[]
  stripeCustomerId     String?   @unique @map("stripe_customer_id")
  stripeSubscriptionId String?   @unique @map("stripe_subscription_id")
  stripePriceId        String?   @map("stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map("stripe_current_period_end")

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("userId")
  type              String
  provider          String
  providerAccountId String  @map("providerAccountId")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("sessionToken")
  userId       String   @map("userId")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

enum UserRole {
  ADMIN
  USER
}


// --- BAGIAN DATA TREN (Yang Baru Kita Tambahkan) ---

model trending_products {
  id          String    @id @default(cuid())
  title       String    @unique
  category    String?
  description String?
  status      String?   @default("new")
  image_url   String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
}